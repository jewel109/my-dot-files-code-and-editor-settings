{
	"workbench.iconTheme": "vscode-great-icons",
	"editor.tabCompletion": "on",
	"workbench.settings.editor": "json",
	"workbench.settings.useSplitJSON": true,
	"editor.fontSize": 18,
	"workbench.colorCustomizations": {
		"activityBarBadge.background": "#2979FF",
		"activityBar.activeBorder": "#2979FF",
		"list.activeSelectionForeground": "#2979FF",
		"list.inactiveSelectionForeground": "#2979FF",
		"list.highlightForeground": "#2979FF",
		"scrollbarSlider.activeBackground": "#2979FF50",
		"editorSuggestWidget.highlightForeground": "#2979FF",
		"textLink.foreground": "#2979FF",
		"progressBar.background": "#2979FF",
		"pickerGroup.foreground": "#2979FF",
		"tab.activeBorder": "#2979FF",
		"notificationLink.foreground": "#2979FF",
		"editorWidget.resizeBorder": "#2979FF",
		"editorWidget.border": "#2979FF",
		"settings.modifiedItemIndicator": "#2979FF",
		"settings.headerForeground": "#2979FF",
		"panelTitle.activeBorder": "#2979FF",
		"breadcrumb.activeSelectionForeground": "#2979FF",
		"menu.selectionForeground": "#2979FF",
		"menubar.selectionForeground": "#2979FF",
		"editor.findMatchBorder": "#2979FF",
		"selection.background": "#2979FF40",
		"statusBarItem.remoteBackground": "#2979FF"
	},
	// config related to code formatting
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	"editor.formatOnSave": true,
	"[javascript,]": {
		"editor.formatOnSave": false
	},
	"emmet.includeLanguages": {
		"html": "html",
		"javascript": "javascriptreact"
	},
	"prettier.disableLanguages": ["javascript", "javascriptreact"],
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true,
		"source.organizeImports": true,
		"eslint.validate": true
	},
	"eslint.alwaysShowStatus": true,
	"materialTheme.accent": "Blue",
	"files.autoSaveDelay": 10,
	"emmet.triggerExpansionOnTab": true,
	"workbench.startupEditor": "newUntitledFile",
	"editor.fontFamily": "Fira Code",
	// "editor.fontLigatures": true,
	"prettier.useTabs": true,
	"editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'zero'",
	"npm.exclude": "",
	"editor.formatOnPaste": true,
	"html-css-class-completion.enableEmmetSupport": true,
	"emmet.showSuggestionsAsSnippets": true,
	"explorer.confirmDelete": false,
	"editor.formatOnType": true,
	"html.format.indentHandlebars": true,
	"html.format.indentInnerHtml": true,
	"html.format.endWithNewline": true,
	"javascript.format.insertSpaceAfterConstructor": true,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
	"javascript.format.insertSpaceBeforeFunctionParenthesis": false,
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,
	"javascript.format.placeOpenBraceOnNewLineForFunctions": false,
	"prettier.jsxSingleQuote": true,
	"eslint.format.enable": true,
	"html.format.enable": true,
	"html.format.extraLiners": "",
	"standard.autoFixOnSave": true,
	"path-autocomplete.extensionOnImport": true,
	"autoimport.showNotifications": true,
	"auto-close-tag.SublimeText3Mode": true,
	"autoimport.absolute": true,
	"bracketPairColorizer.forceIterationColorCycle": true,
	"bracketPairColorizer.highlightActiveScope": true,
	"bracketPairColorizer.forceUniqueOpeningColor": true,
	"bracketPairColorizer.showBracketsInRuler": true,
	"bracketPairColorizer.showBracketsInGutter": true,
	"bracketPairColorizer.excludedLanguages": [],
	"prettier.jsxBracketSameLine": true,
	"prettier.resolveGlobalModules": true,
	"prettier.withNodeModules": true,
	"terminal.explorerKind": "external",
	"explorer.confirmDragAndDrop": false,
	"terminal.integrated.automationShell.linux": "",
	"editor.renameOnType": true,
	"liveServer.settings.donotShowInfoMsg": true,
	"prettier.proseWrap": "always",
	"editor.autoClosingBrackets": "always",
	"editor.wordWrap": "bounded",
	"javascript.updateImportsOnFileMove.enabled": "always",
	"vscode-neovim.highlightGroups.highlights": {
		"Directory": "vim",
		"IncSearch": {
			"backgroundColor": "theme.editor.findMatchBackground",
			"borderColor": "theme.editor.findMatchBorder"
		},
		"Search": {
			"backgroundColor": "theme.editor.findMatchHighlightBackground",
			"borderColor": "theme.editor.findMatchHighlightBorder"
		},
		"Visual": {
			"backgroundColor": "theme.editor.selectionBackground"
		},
		"Conceal": "vim",
		"Substitute": "vim"
	},
	"vscode-neovim.useWSL": true,
	"vim.camelCaseMotion.enable": true,
	"vim.handleKeys": {
		"<C-d>": true,
		"<C-c>": false,
		"<C-v>": false,
		"<C-x": false
	},
	"vim.replaceWithRegister": true,
	"vim.autoSwitchInputMethod.enable": true,
	"vim.sneak": true,
	"tailwindCSS.rootFontSize": 14,
	"vsicons.presets.hideFolders": true,
	"vim.insertModeKeyBindings": [
		{
			"before": ["j", "j"],
			"after": ["<esc>"]
		}
	],
	"code-runner.runInTerminal": true,
	"editor.tabCompletion": "on",
	"screencastMode.fontSize": 30,
	"git.confirmSync": false,
	"editor.cursorStyle": "line",
	"editor.insertSpaces": false,
	"editor.lineNumbers": "on",
	"editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
	"diffEditor.wordWrap": "on",
	"liveSassCompile.settings.autoprefix": [
		{
			"format": "expanded",
			"extensionName": ".css",
			"savePath": null
		},
		// You can add more
		{
			"format": "compressed",
			"extensionName": ".min.css",
			"savePath": "/dist/css"
		},
		// More Complex
		{
			"format": "compressed",
			"extensionName": ".min.css",
			"savePath": "~/../css/"
		}
	],
	"editor.inlineSuggest.enabled": true,
	"[php]": {
		"editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
	},
	"javascript.suggest.completeFunctionCalls": true,
	"typescript.suggest.completeFunctionCalls": true,
	"[javascript]": {
		

		"editor.autoClosingBrackets": "always"
	},
	"[python]": {
		"editor.autoClosingBrackets": "always"
	},
	"workbench.editorAssociations": {
		"*.ipynb": "jupyter.notebook.ipynb"
	},
	"files.autoSave": "afterDelay",
	"tailwindCSS.emmetCompletions": true,
	"window.zoomLevel": -1,
	"scss.showErrors": true,
	"scss.implicitlyLabel": "",
	"scss.suggestVariables": true,
	"scss.suggestFunctionsInStringContextAfterSymbols": " (+-*%",
	"settingsSync.ignoredExtensions": [
		
	
	]
}
